// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	reddit "github.com/JohnPlummer/reddit-client/reddit"
	gomock "github.com/golang/mock/gomock"
)

// MockRedditClient is a mock of RedditClient interface.
type MockRedditClient struct {
	ctrl     *gomock.Controller
	recorder *MockRedditClientMockRecorder
}

// MockRedditClientMockRecorder is the mock recorder for MockRedditClient.
type MockRedditClientMockRecorder struct {
	mock *MockRedditClient
}

// NewMockRedditClient creates a new mock instance.
func NewMockRedditClient(ctrl *gomock.Controller) *MockRedditClient {
	mock := &MockRedditClient{ctrl: ctrl}
	mock.recorder = &MockRedditClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRedditClient) EXPECT() *MockRedditClientMockRecorder {
	return m.recorder
}

// getPosts mocks base method.
func (m *MockRedditClient) getPosts(ctx context.Context, subreddit string, params map[string]string) ([]reddit.Post, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "getPosts", ctx, subreddit, params)
	ret0, _ := ret[0].([]reddit.Post)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// getPosts indicates an expected call of getPosts.
func (mr *MockRedditClientMockRecorder) getPosts(ctx, subreddit, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getPosts", reflect.TypeOf((*MockRedditClient)(nil).getPosts), ctx, subreddit, params)
}

// getPostsAfter mocks base method.
func (m *MockRedditClient) getPostsAfter(ctx context.Context, subreddit string, after *reddit.Post, limit int) ([]reddit.Post, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "getPostsAfter", ctx, subreddit, after, limit)
	ret0, _ := ret[0].([]reddit.Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// getPostsAfter indicates an expected call of getPostsAfter.
func (mr *MockRedditClientMockRecorder) getPostsAfter(ctx, subreddit, after, limit interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getPostsAfter", reflect.TypeOf((*MockRedditClient)(nil).getPostsAfter), ctx, subreddit, after, limit)
}
